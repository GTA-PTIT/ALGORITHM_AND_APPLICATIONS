#include <bits/stdc++.h>
using namespace std;
void Run()
{
    int t;
    cin >> t;
    getchar();
    while (t--)
    {
        string s;
        cin >> s;
        int n = s.length();
        int f[n][n];
        int i,j,k;
        int res = 1;
        //khoi tao
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++) f[i][j] = 0;
        }
        for (i = 0; i < n; i++) f[i][i] = 1;
        for (i = 0; i < n-1; i++)
            if (s[i] == s[i+1])
            {
                f[i][i+1] = 1;
                res = 2;
            }
        for (k = 2; k < n; k++)
        {
            for (i = 0; i < n; i++)
            {
                j = i + k;
                if (s[i] == s[j] && f[i+1][j-1])
                {
                    f[i][j] = 1;
                    res = max(res, k+1);
                }
            }
        }
        cout << res << endl;
    }
}
int main()
{
    Run();
    return 0;
}

//by TinyPrg194
// #include <bits/stdc++.h>
// using namespace std;

// #define quick() ios_base::sync_with_stdio(false); cin.tie(0);
// #define pb push_back
// using ll = long long;
// int mod = 1000000007;

// void Run()
// {
//     int test;
//     cin >> test;
//     while (test--)
//     {
//         string s;
//         cin >> s;
//         int n = s.size(),ans = 1;
//         bool F[n + 1][n + 1];
//         memset(F,false,sizeof(F));
//         s = "x" + s;
//         for(int i = 1;i <= n; i++)F[i][i] = 1;
//         for(int len = 2; len <= n; len++)
//         {
//             for(int i = 1; i <= n - len + 1; i++)
//             {
//                 int j = i + len - 1;
//                 if(len == 2 && s[i] == s[j])F[i][j] = true;
//                 else {
//                     F[i][j] = F[i + 1][j - 1] && (s[i] == s[j]);
//                 }
//                 if(F[i][j]) ans = max(ans,len);
//             }
//         }
//         cout << ans << endl;
//     }
// }
// int main()
// {
//     quick();
//     Run();
//     return 0;
// }
// /*

// */
